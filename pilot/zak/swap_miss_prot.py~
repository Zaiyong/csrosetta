#!/usr/bin/env python2.7
##-*- mode:python;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t;python-indent:2 -*-'




class FileArgumentParser(argparse.ArgumentParser):
	def convert_arg_line_to_args(self, arg_line):
    for arg in arg_line.split():
        if not arg.strip():
            continue
        yield arg

parser = FileArgumentParser(description="swap and miss chemical shifts of side chains",fromfile_prefix_chars='@',add_help=True)
parser.add_argument('-swap',help='percentage of sidechain pairs to be swapped',type=float,default=0)
parser.add_argument('-miss',help='percentage to miss residue',type=float,default=0)
args = parser.parse_args()

def swap_sidechains( res_list, num ):
	####------swap residues--------####
	#swap_aa=['KR','M',]#only these amino acids can be swapped
	seq=res_list.sequence()
	N=0
	residue_pair=[]
	for i in range(0,len(res_list.sequence())-1):
		aai=seq[i]
		for j in range(i+1,len(res_list.sequence())):
			aaj=seq[j]
			#for aa in swap_aa:
			if aai == aaj:
				N+=1
				residue_pair.append([i+1,j+1])
				#rand_prob=random.uniform(0,1)
				#if rand_prob<prob:
	selected_pair=random.sample(residue_pair,num)
	for p in selected_pair:
		print 'swap sidechains: %3d %3s  <-> %3d %3s'%(p[0],seq[p[0]-1],p[1],seq[p[1]-1])
		scramble.swap_sidechains(p[0],p[1],res_list)
	print 'there are totally %d same amino acid pairs'%N
